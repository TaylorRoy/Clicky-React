{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Score/Score.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","shuffleFriends","id","alt","name","src","image","Wrapper","children","Title","Score","App","state","friends","score","highScore","clickedOn","removeFriend","_this","filter","friend","setState","array","console","log","Object","assertThisInitialized","friendArray","i","length","j","Math","floor","random","temp","keepScore","inArray","includes","push","_this2","this","components_Wrapper_Wrapper","components_Title_Title","components_Score_Score","map","components_FriendCard_FriendCard","key","occupation","location","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d7fac3fd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img onClick={() => props.shuffleFriends(props.id)} className=\"treeImage\" alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => \n<h1 className=\"title\">{props.children}</h1>\n/* <p className=\"currentScore\">Score:</p> */\n    \n\nexport default Title;\n","import React from \"react\";\r\n\r\nconst Score = (props) => <p className=\"score\">{props.children}</p>\r\n\r\nexport default Score;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score/Score\"\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highScore: 0,\n    clickedOn: []\n  };\n\n  removeFriend = id => {\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  //use Durstenfeld shuffle function to randomize imageArray\n  shuffleFriends = (id) => {\n    var array = this.state.friends\n    console.log(\"this shuffle\", this);\n    var friendArray = this.state.friends;\n    console.log(\"friendArray\", friendArray);\n\n    for (var i = this.state.friends.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    //reset friends to randomized array\n    this.setState({ friends: array })\n    //call the keepScore function to handle score and highScore\n    this.keepScore(id);\n  };\n\n\n  keepScore = (id) => {\n    console.log(\"button id\", id);\n    var inArray = this.state.clickedOn.includes(id);\n    console.log(\"inArray?\", inArray);\n    if (inArray === false) {\n      this.setState({ score: this.state.score + 1 })\n      // this.setState({ highScore: this.state.highScore + 1 })\n      console.log(\"score\", this.state.score);\n      // console.log(\"highScore\", this.state.highScore);\n      this.state.clickedOn.push(id);\n      console.log(\"clicked on array\", this.state.clickedOn);\n    }\n    else {\n      if (this.state.highScore >= this.state.score) {\n        this.setState({ score: 0 });\n        this.setState({ clickedOn: [] });\n      }\n      else\n        this.setState({ highScore: this.state.score });\n        console.log(\"highScore\", this.state.highScore);\n        this.setState({ score: 0 });\n        this.setState({ clickedOn: [] });\n    }\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>\n          Tree Memory Game\n        <Score className=\"score\">Score: {this.state.score}</Score>\n        <Score className=\"highScore\">Highscore: {this.state.highScore}/{friends.length}</Score>\n        </Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            removeFriend={this.removeFriend}\n            shuffleFriends={this.shuffleFriends}\n            keepScore={this.keepScore}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}